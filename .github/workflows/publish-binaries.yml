# @file publish-binaries.yml
#
# A workflow for publishing QEMU DXE Core binaries.
#
##
# Copyright (c) Microsoft Corporation.
# SPDX-License-Identifier: Apache-2.0
##
name: Publish

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  build:
    name: Publish Binaries

    runs-on: windows-latest

    permissions:
      contents: write
      actions: read

    steps:
      - name: ‚úÖ Checkout Repository ‚úÖ
        uses: actions/checkout@v4

      - name: üõ†Ô∏è Download Rust Tools üõ†Ô∏è
        uses: OpenDevicePartnership/patina/.github/actions/rust-tool-cache@main

      - name: Build Q35 Debug
        run: cargo make q35

      - name: Build SBSA Debug
        run: cargo make sbsa

      - name: Build Q35 Release
        run: cargo make q35-release

      - name: Build SBSA Release
        run: cargo make sbsa-release

      - name: Collect Binaries
        run: |
          # Create a directory for the release artifacts
          mkdir -p "artifacts/debug"
          mkdir -p "artifacts/release"

          # Copy the binaries to the artifacts directory
          cp target/x86_64-unknown-uefi/debug/qemu_q35_dxe_core.efi artifacts/debug/qemu_q35_dxe_core.efi
          cp target/x86_64-unknown-uefi/debug/qemu_q35_dxe_core.pdb artifacts/debug/qemu_q35_dxe_core.pdb
          cp target/x86_64-unknown-uefi/release/qemu_q35_dxe_core.efi artifacts/release/qemu_q35_dxe_core.efi
          cp target/x86_64-unknown-uefi/release/qemu_q35_dxe_core.pdb artifacts/release/qemu_q35_dxe_core.pdb
          cp target/aarch64-unknown-uefi/debug/qemu_sbsa_dxe_core.efi artifacts/debug/qemu_sbsa_dxe_core.efi
          cp target/aarch64-unknown-uefi/debug/qemu_sbsa_dxe_core.pdb artifacts/debug/qemu_sbsa_dxe_core.pdb
          cp target/aarch64-unknown-uefi/release/qemu_sbsa_dxe_core.efi artifacts/release/qemu_sbsa_dxe_core.efi
          cp target/aarch64-unknown-uefi/release/qemu_sbsa_dxe_core.pdb artifacts/release/qemu_sbsa_dxe_core.pdb

      - name: Upload Binaries
        if: ${{ github.event_name != 'release' }}
        uses: actions/upload-artifact@v4
        with:
          name: qemu-dxe-core
          path: artifacts/

      - name: Publish Release Asset
        if: ${{ github.event_name == 'release' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          Compress-Archive -Path artifacts/* -DestinationPath patina_dxe_core_qemu.zip
          gh release upload ${{ github.event.release.tag_name }} patina_dxe_core_qemu.zip
