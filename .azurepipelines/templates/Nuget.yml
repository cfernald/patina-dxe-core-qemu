#
# Azure pipeline template to package and push the QEMU Rust DXE Core NuGet package.
#
# Copyright (c) Microsoft Corporation. All rights reserved.
##

parameters:
# The package version should always be specified and accurate.
- name: nuget_package_version
  displayName: Nuget Package Version
  type: string
  default: ''

jobs:

- job: package_and_push
  displayName: Create and Push QEMU Rust DXE Core Package
  dependsOn: build_and_test

  timeoutInMinutes: 30

  workspace:
    clean: all

  pool:
    vmImage: 'windows-latest'

  variables:
    - group: "UEFI Rust Tokens"

  steps:
  - checkout: self
    fetchDepth: 1
    clean: true

  - task: UsePythonVersion@0
    displayName: 'Use Python 3.12'
    inputs:
      versionSpec: '3.12.x'
      architecture: 'x64'

  - task: DownloadBuildArtifacts@0
    name: DownloadSourceFileBuildArtifacts
    displayName: Download QEMU Rust DXE Core Build Artifact
    inputs:
      buildType: 'current'
      downloadType: 'single'
      artifactName: 'Bin'
      downloadPath: '$(Build.StagingDirectory)/Nuget/package_contents'

  - task: NuGetAuthenticate@1
    displayName: Authenticate Local Feed

  - task: Bash@3
    name: PackAndPublishNugetPackage
    displayName: Pack and Push Nuget Package
    env:
      LICENSE_FILE_PATH: $(Build.SourcesDirectory)/.nuget/license.txt
      NUGET_KEY: $(msuefi-authpat)
      NUGET_PACKAGE_CONFIG_FILE_PATH: $(Build.SourcesDirectory)/.nuget/dxe_core_config.yaml
      NUGET_PACKAGE_VERSION: ${{ parameters.nuget_package_version }}
    inputs:
      targetType: 'inline'
      script: |
        apiKey=$NUGET_KEY
        configFilePath=$NUGET_PACKAGE_CONFIG_FILE_PATH
        customLicensePath=$LICENSE_FILE_PATH
        inputFolderPath="${BUILD_STAGINGDIRECTORY}/Nuget/package_contents"
        outputLogPath="${BUILD_STAGINGDIRECTORY}/Nuget/NugetPackagingLog.txt"
        packageVersion=$NUGET_PACKAGE_VERSION
        pip install edk2-pytool-extensions
        nuget-publish --Operation PackAndPush --OutputLog "$outputLogPath" --ConfigFilePath "$configFilePath" --InputFolderPath "$inputFolderPath" --Version "$packageVersion" --ApiKey "$apiKey" --CustomLicensePath "$customLicensePath"
